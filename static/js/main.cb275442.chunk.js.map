{"version":3,"sources":["images/one.png","images/two.jpg","images/three.jpg","images/four.jpg","images/five.jpg","images/six.jpg","images/seven.jpg","images/eight.jpg","images/nine.jpg","images/ten.jpg","images/eleven.jpg","images/twelve.jpg","components/imageTiles.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","score","wins","losses","ImageTiles","one","id","img","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","defaultTrackClicked","1","2","3","4","5","6","7","8","9","10","11","12","state","tagState","pics","trackClicked","clickTheButton","target","imgsClicked","Object","values","console","log","setState","j","x","i","picState","length","Math","floor","random","lost","won","keys","defaulTrackClicked","className","this","map","pic","key","src","alt","onClick","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cb275442.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/one.62ac600b.png\";","module.exports = __webpack_public_path__ + \"static/media/two.dd8c8823.jpg\";","module.exports = __webpack_public_path__ + \"static/media/three.5598e900.jpg\";","module.exports = __webpack_public_path__ + \"static/media/four.618059c5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/five.a26ff157.jpg\";","module.exports = __webpack_public_path__ + \"static/media/six.2c9a327a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/seven.e7fb3046.jpg\";","module.exports = __webpack_public_path__ + \"static/media/eight.b4dad123.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nine.7a6b1d4f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ten.4389958e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/eleven.ad93c3ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/twelve.41736665.jpg\";","import React from \"react\";\r\nimport one from \"../images/one.png\";\r\nimport two from \"../images/two.jpg\";\r\nimport three from \"../images/three.jpg\";\r\nimport four from \"../images/four.jpg\";\r\nimport five from \"../images/five.jpg\";\r\nimport six from \"../images/six.jpg\";\r\nimport seven from \"../images/seven.jpg\";\r\nimport eight from \"../images/eight.jpg\";\r\nimport nine from \"../images/nine.jpg\";\r\nimport ten from \"../images/ten.jpg\";\r\nimport eleven from \"../images/eleven.jpg\";\r\nimport twelve from \"../images/twelve.jpg\";\r\n// import thirteen from \"../images/thirteen.jpg\";\r\n// import fourteen from \"../images/fourteen.jpg\";\r\n// import fifteen from \"../images/fifteen.jpg\";\r\nimport \"./style.css\";\r\n\r\nlet score = 0;\r\nlet wins = 0;\r\nlet losses = 0;\r\n\r\nclass ImageTiles extends React.Component {\r\n  one = {\r\n    id: 1,\r\n    img: one\r\n  }\r\n  two = {\r\n    id: 2,\r\n    img: two\r\n  }\r\n  three = {\r\n    id: 3,\r\n    img: three\r\n  }\r\n  four = {\r\n    id: 4,\r\n    img: four\r\n  }\r\n  five = {\r\n    id: 5,\r\n    img: five\r\n  }\r\n  six = {\r\n    id: 6,\r\n    img: six\r\n  }\r\n  seven = {\r\n    id: 7,\r\n    img: seven\r\n  }\r\n  eight = {\r\n    id: 8,\r\n    img: eight\r\n  }\r\n  nine = {\r\n    id: 9,\r\n    img: nine\r\n  }\r\n  ten = {\r\n    id: 10,\r\n    img: ten\r\n  }\r\n  eleven = {\r\n    id: 11,\r\n    img: eleven\r\n  }\r\n  twelve = {\r\n    id: 12,\r\n    img: twelve\r\n  }\r\n\r\n  // Object.keys => ['id', 'img']\r\n  // Object.values => [12, '../img_Path.jpg']\r\n\r\n  defaultTrackClicked = {\r\n\r\n    1: 0,\r\n    2: 0,\r\n    3: 0,\r\n    4: 0,\r\n    5: 0,\r\n    6: 0,\r\n    7: 0,\r\n    8: 0,\r\n    9: 0,\r\n    10: 0,\r\n    11: 0,\r\n    12: 0\r\n\r\n  }\r\n\r\n  state = {\r\n    tagState: false,\r\n    // this.one, this.two, this.three, this.four,\r\n    pics: [this.one, this.two, this.three, this.four, this.five, this.six, this.seven, this.eight, this.nine, this.ten, this.eleven, this.twelve],\r\n    trackClicked: this.defaultTrackClicked\r\n  };\r\n\r\n  clickTheButton = ({ target }) => {\r\n    // var scores = Object.values(this.state.trackClicked) [0, 0, 0, 0 ]\r\n    // var won = true;\r\n    // loop to go through all scores\r\n    // if (scores[i] > 1) => automatically loose => won = false break; => end the game\r\n    // if (scores < 1) => won false => continue the game\r\n    //\r\n    // end of the loop => won = true\r\n\r\n    // outside of loop\r\n    // if won == true => they won the game\r\n\r\n\r\n\r\n\r\n    let imgsClicked = Object.values(this.state.trackClicked);\r\n    console.log(\"imgsClicked: \", imgsClicked);\r\n\r\n\r\n\r\n\r\n    // for (let k = 0; k < imgsClicked.length; k++) {\r\n    //   console.log(\"wtf man, \", imgsClicked)\r\n    //   if (imgsClicked[k] > 1) {\r\n    //     won = false;\r\n    //     losses++;\r\n    //     alert(\"wtf man\");\r\n    //     break;\r\n    //   } else if (imgsClicked[k] < 1) {\r\n    //     console.log(\"Score: \", score);\r\n    //   } \r\n    // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // for (let k = 0; k < imgsClicked.length; k++) {\r\n    //   if (imgsClicked[k] > 0) {\r\n    //     losses++\r\n    //     alert(\"Sorry you lose. You've won \" + wins + \" rounds and lost \" + losses + \".\");\r\n    //     won = false;\r\n    //     break;\r\n    //   } else if (imgsClicked < 1) {\r\n    //     won = false;\r\n    //     console.log(\"carry on\")\r\n    //   } else {\r\n    //     won = true;\r\n    //   }\r\n    // }\r\n\r\n    //   if (won === true) {\r\n    //     alert(\"You win!\")\r\n    //   }\r\n\r\n    // for (k = imgsClicked.length; k > 0; k++) {\r\n    //   if (imgsClicked[k] > 1) {\r\n    //     console.log(\"You lose man.\");\r\n    //     losses++;\r\n    //     console.log(\"Wins: \", wins);\r\n    //     console.log(\"Losses: \", losses)\r\n    //   }\r\n    // }\r\n\r\n\r\n    let { id } = target;\r\n\r\n    console.log(\"The target\", id)\r\n    let trackClicked = { ...this.state.trackClicked }\r\n    trackClicked[id] = this.state.trackClicked[id] + 1\r\n    this.setState({\r\n      trackClicked: trackClicked,\r\n    }, () => {\r\n      // this.state.pics.sort((a,b)=>{\r\n      //   let rand = Math.random();\r\n      //   return (rand > .50) ? 1 : (rand === 0) ? 0 : -1 ;\r\n      // })\r\n\r\n      var picState = this.state.pics;\r\n\r\n      var j, x, i;\r\n\r\n      for (i = picState.length - 1; i > 0; i -= 1) {\r\n        j = Math.floor(Math.random() * (i + 1));  //random number between 0 and i +1.  The further along the the index you get, the further.\r\n        x = picState[i];\r\n        picState[i] = picState[j]; // change the value\r\n        picState[j] = x;\r\n      }\r\n\r\n      trackClicked = this.state.trackClicked;\r\n      let lost = false;\r\n      let won = true;\r\n\r\n      for (i = 0; i < Object.keys(trackClicked).length; i++) {\r\n        if (Object.values(trackClicked)[i] > 1) {\r\n          // they loose here....\r\n          lost = true;\r\n          console.log('You Lose.');\r\n        }\r\n\r\n        if (Object.values(trackClicked)[i] != 1) {\r\n          won = false;\r\n        }\r\n      }\r\n\r\n      if (lost) {\r\n        losses++;\r\n        score = 0;\r\n        this.setState({ trackClicked: this.defaultTrackClicked });\r\n        // reset trackedClicked state\r\n      } else {\r\n        score++;\r\n        console.log(\"score: \", score)\r\n      }\r\n\r\n      if (won) {\r\n        console.log('YOU WON');\r\n        console.log('score: ', score);\r\n        wins++;\r\n        score = 0;\r\n        this.setState({ trackClicked: this.defaulTrackClicked });\r\n        // reset trackedClicked state\r\n      }\r\n\r\n\r\n\r\n      console.log(\"The new state is: \", this.state)\r\n      // for (var k = 0; k < this.state.tagState.trackClicked.length; k++) {\r\n      //   if (this.state.tagState.trackClick)\r\n      // }\r\n\r\n      // for (k = imgsClicked.length; k > 0; k++) {\r\n      //   if (imgsClicked[k] > 1) {\r\n      //     console.log(\"You lose man.\");\r\n      //     losses++;\r\n      //     console.log(\"Wins: \", wins);\r\n      //     console.log(\"Losses: \", losses)\r\n      //   }\r\n      // }\r\n\r\n\r\n\r\n\r\n      if (this.state.tagState.trackClicked > 1) {\r\n        console.log(\"you Lose.\")\r\n      }\r\n\r\n    });\r\n\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>Wins: {wins} </p>\r\n          <p>Losses: {losses} </p>\r\n          <p>Score: {score} </p>\r\n          <div className=\"row\">\r\n          {this.state.pics.map((pic) => {\r\n            return (\r\n              <div key={pic.id} className=\"col-3\">\r\n                <img\r\n                  id={pic.id}\r\n                  src={pic.img}\r\n                  className=\"\"\r\n                  alt=\"logo\"\r\n                  onClick={this.clickTheButton}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageTiles;","import React, { Component } from \"react\";\r\nimport ImageTiles from \"./components/imageTiles.js\";\r\nimport \"./App.css\";\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <ImageTiles />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}